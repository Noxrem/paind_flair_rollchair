/*
 * gpio.c
 *
 *  Created on: 17.10.2021
 *      Author: Noxrem
 */
#include "gpio.h"
#include "McuLib.h"
#include "McuGPIO.h"
#include <stdio.h>

/* Private Variables */
static McuGPIO_Handle_t myPin;

void GPIO_Button_Init(void)
{
	McuGPIO_Init();	// init McuLib GPIO functionality

	#if McuLib_CONFIG_CPU_IS_KINETIS
		CLOCK_EnableClock(kCLOCK_PortB);	// Clock gating for PORTB
	#elif McuLib_CONFIG_CPU_IS_LPC
		GPIO_PortInit(GPIO, 0);				// Init Port in LPC845
	#endif

	// Get default configuration for GPIO pin
	McuGPIO_Config_t config;
	McuGPIO_GetDefaultConfig(&config);

	#if McuLib_CONFIG_CPU_IS_KINETIS
		// Specific configuration for PTB16 as input
		config.hw.gpio = GPIOB;
		config.hw.port = PORTB;
		config.hw.pin = 16;
		config.isInput = true;
	#elif McuLib_CONFIG_CPU_IS_LPC
		// Pin configuration for PIO0_4
		config.hw.gpio = GPIO;
		config.hw.port = 0;
		config.hw.pin = 4;
		config.hw.iocon = IOCON_INDEX_PIO0_4;
		config.hw.isInput = true;
	#endif

	// Create device handle with configs
	myPin = McuGPIO_InitGPIO(&config);
	if(myPin==NULL)	// Check if handle has been created
	{
		while(1);	/* error */
	}
}

void GPIO_Button_Deinit(void)
{
	McuGPIO_Deinit();
}

void GPIO_Button_Check(void)
{
	while(1)
	{
		if(McuGPIO_IsLow(myPin))
		{
			printf("Button is pressed!\n");
			while(McuGPIO_IsLow(myPin));		// lock as long the button is pressed
		}
	}
}
