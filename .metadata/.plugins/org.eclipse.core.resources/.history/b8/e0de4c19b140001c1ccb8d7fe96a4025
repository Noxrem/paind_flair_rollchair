/*
 * application.c
 *
 *  Created on: 21.10.2021
 *      Author: Noxrem
 */

#include "application.h"

// SW01: Introduction
//#include "fsl_gpio.h"
#include <stdio.h>
#include "blinky_tinyK22.h"

// SW02: Architecture
#include "architecture.h"

// SW03: Development (bin, hex, s19)

// SW04: Firmware: blinky with McuWait, GPIO button with McuLib
#include "blinky_wait.h"
#include "gpio.h"
#include "LED.h"

// SW05: FreeRTOS
#include "myTasks.h"
#include "McuRTOS.h"

// SW06: Hooks, Heap, SystemView
#include "LED.h"
#include "mySystemView.h"
#include "heap_test.h"

void APP_Run(void)
{
	printf("Welcome to AEMBS!\n");	// semihosting

	/* ----------------------------------------------------------- */
	// SW01: Introduction, first project, bare metal blinky, delay
	//blinky();	// will not go further because of endless loop

	/* ----------------------------------------------------------- */
	// SW02: ARM Cortex, timer, cycle counter
	//architecture();

	/* ----------------------------------------------------------- */
	// SW03: McuLib

	/* ----------------------------------------------------------- */
	// SW04 McuWait
	//Blinky_Wait_Init();		// init the blinky
	GPIO_Button_Init();
	LED_Init();

	//Blinky_Wait_Run();	// blink and run in endless loop
	//GPIO_Button_Check();	// print message if button is pressed (endless loop)
	//LED_Blinky();			// Lets the led, blink (endless loop)

	/* ----------------------------------------------------------- */
	// SW05: FreeRTOS
	MyTasks_Init();		// creates task(s) and runs scheduler
	// does not get here

	/* ----------------------------------------------------------- */
	// SW06: Hook, Heap, SystemView
	mySystemView_Init();	//
	Heap_Test_Init();		// Reserve memory in the heap before the Scheduler is started
	//Heap_Test_Malloc_Fail();	// Reserve too much memory on the heap so the MallocFailedHook() is triggered

	// Start RTOS
	vTaskStartScheduler();
	// does not get here
	while(1){}	// (endless loop)
}
